package main.java.com.careHubApps.view.dokter;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import main.java.com.careHubApps.controller.DokterController;
import main.java.com.careHubApps.model.DokterModel;
import resources.components.CustomTextField;
import resources.components.RoundedPanel;
import resources.components.ScrollBarCustom;
import resources.components.ShadowPanel;

/**
 *
 * @author ASUS
 */
public final class DokterPanel extends javax.swing.JPanel {

    List<DokterModel> dokterList;
    DokterController dokterController;

    TambahDokterView tambahDokterView;
    EditDokterView editDokterView;
    
    /**
     * Creates new form HomePanel
     */
    public DokterPanel() {
        initComponents();

        dokterController = new DokterController();

        ScrollBarCustom sb = new ScrollBarCustom();
        jScrollPane1.setVerticalScrollBar(sb);
        
        
        tambahDokterView = new TambahDokterView();

        loadDataDokter();

        setupHoverEffect(searchButton, Color.decode("#508D4E"), Color.BLACK);
        setupHoverEffect(refreshButton, Color.decode("#D9D9D9"), Color.BLACK);
        setupHoverEffect(tambahButton, Color.decode("#D9D9D9"), Color.BLACK);

        try {
            File poppinsRegular = new File("src/resources/assets/fonts/Poppins-Regular.ttf");
            File poppinsSemiBold = new File("src/resources/assets/fonts/Poppins-SemiBold.ttf");

            Font titleTxtStyle = Font.createFont(Font.TRUETYPE_FONT, poppinsSemiBold).deriveFont(20f);
            Font searchTxtStyle = Font.createFont(Font.TRUETYPE_FONT, poppinsRegular).deriveFont(12f);

            titleDataObat.setFont(titleTxtStyle);
            searchTxtField.setFont(searchTxtStyle);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        headerPanel = new ShadowPanel(8, Color.decode("#DFDFDF"));
        titleDataObat = new javax.swing.JLabel();
        searchTxtField = new CustomTextField(15, 15, 15, Color.decode("#80AF81"), "Search here", 8);
        searchButton = new RoundedPanel(12, Color.decode("#1A5319"));
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        refreshButton = new RoundedPanel(12, Color.decode("#1A5319"));
        jLabel4 = new javax.swing.JLabel();
        tambahButton = new RoundedPanel(12, Color.decode("#1A5319"));
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bodyPanel = new RoundedPanel(12, Color.WHITE);

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(1020, 720));
        setPreferredSize(new java.awt.Dimension(1040, 720));
        setLayout(new java.awt.CardLayout());

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));

        titleDataObat.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        titleDataObat.setText("Data Dokter");

        searchTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTxtFieldKeyTyped(evt);
            }
        });

        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });
        searchButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/search_icon.png"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setPreferredSize(new java.awt.Dimension(30, 30));
        searchButton.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/doctor_icon.png"))); // NOI18N

        refreshButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refreshButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshButtonMouseClicked(evt);
            }
        });
        refreshButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/refresh_icon.png"))); // NOI18N
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel4.setPreferredSize(new java.awt.Dimension(30, 30));
        refreshButton.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        tambahButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tambahButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tambahButtonMouseClicked(evt);
            }
        });
        tambahButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/add_icon.png"))); // NOI18N
        tambahButton.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 30, 30));

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(titleDataObat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 464, Short.MAX_VALUE)
                .addComponent(searchTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tambahButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                        .addComponent(titleDataObat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tambahButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 1000, 70));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        bodyPanel.setBackground(new java.awt.Color(255, 255, 255));
        bodyPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout bodyPanelLayout = new javax.swing.GroupLayout(bodyPanel);
        bodyPanel.setLayout(bodyPanelLayout);
        bodyPanelLayout.setHorizontalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 948, Short.MAX_VALUE)
        );
        bodyPanelLayout.setVerticalGroup(
            bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 918, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(bodyPanel);

        mainPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 960, 550));

        add(mainPanel, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void searchTxtFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtFieldKeyTyped
        // TODO add your handling code here:
        performSearch();
    }//GEN-LAST:event_searchTxtFieldKeyTyped

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        // TODO add your handling code here:
        performSearch();
    }//GEN-LAST:event_searchButtonMouseClicked

    private void refreshButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshButtonMouseClicked
        // TODO add your handling code here:
        loadDataDokter();
        displayDokter(dokterList);
    }//GEN-LAST:event_refreshButtonMouseClicked

    private void tambahButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tambahButtonMouseClicked
        // TODO add your handling code here:
        tambahDokterView.setVisible(true);
    }//GEN-LAST:event_tambahButtonMouseClicked

    private void performSearch() {
        String searchText = searchTxtField.getText().trim().toLowerCase();

        if (searchText.isEmpty()) {
            loadDataDokter();
            displayDokter(dokterList);
        } else {
            List<DokterModel> filteredDokter = dokterList.stream()
                    .filter(d -> d.getNama().toLowerCase().contains(searchText)
                    || d.getId().toLowerCase().contains(searchText)
                    || d.getSpesialis().toLowerCase().contains(searchText))
                    .collect(Collectors.toList());

            if (filteredDokter.isEmpty()) {
                displayNoDataFound();
            } else {
                displayDokter(filteredDokter);
            }
        }
    }

    public void loadDataDokter() {
        this.dokterList = dokterController.getAllDokter();
        if (dokterList == null || dokterList.isEmpty()) {
            emptyDataDisplay();
        } else {
            displayDokter(dokterList);
        }
    }

    private void displayNoDataFound() {
        bodyPanel.removeAll();

        JLabel noDataLabel = new JLabel("Maaf, " + "`" + searchTxtField.getText().trim() + "`" + " tidak ditemukan.");
        JLabel noDataImage = new JLabel();

        noDataImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/not_found.png")));

        try {
            File poppinsSemiBold = new File("src/resources/assets/fonts/Poppins-SemiBold.ttf");
            Font labelTxtStyle = Font.createFont(Font.TRUETYPE_FONT, poppinsSemiBold).deriveFont(16f);
            noDataLabel.setFont(labelTxtStyle);
            noDataLabel.setForeground(Color.decode("#508D4E"));
        } catch (Exception e) {
            e.printStackTrace();
        }

        noDataLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noDataImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        bodyPanel.setLayout(null);  // Set layout to null for AbsoluteLayout
        bodyPanel.setBounds(0, 0, 1040, 400);

        int imageWidth = 128;  // Adjust this to the actual width of your image
        int imageHeight = 128; // Adjust this to the actual height of your image
        int labelHeight = 30;  // Height of the label
        int panelWidth = bodyPanel.getWidth();
        int panelHeight = bodyPanel.getHeight();

        int imageX = (panelWidth - imageWidth) / 2;
        int imageY = (panelHeight - imageHeight - labelHeight) / 2;
        int labelX = (panelWidth - noDataLabel.getPreferredSize().width) / 2;
        int labelY = imageY + imageHeight + 10;

        noDataImage.setBounds(imageX, imageY, imageWidth, imageHeight);
        noDataLabel.setBounds(labelX, labelY, noDataLabel.getPreferredSize().width, labelHeight);

        bodyPanel.add(noDataImage);
        bodyPanel.add(noDataLabel);

        bodyPanel.revalidate();
        bodyPanel.repaint();
    }

    private void emptyDataDisplay() {
        bodyPanel.removeAll();

        JLabel noDataLabel = new JLabel("Tidak Ada Data Dokter");
        JLabel noDataImage = new JLabel();

        noDataImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/thinking.png")));

        try {
            File poppinsSemiBold = new File("src/resources/assets/fonts/Poppins-SemiBold.ttf");
            Font labelTxtStyle = Font.createFont(Font.TRUETYPE_FONT, poppinsSemiBold).deriveFont(16f);
            noDataLabel.setFont(labelTxtStyle);
            noDataLabel.setForeground(Color.decode("#508D4E"));
        } catch (Exception e) {
            e.printStackTrace();
        }

        noDataLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noDataImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        bodyPanel.setLayout(null);
        bodyPanel.setBounds(0, 0, 1040, 400);

        int imageWidth = 128;
        int imageHeight = 128;
        int labelHeight = 30;
        int panelWidth = bodyPanel.getWidth();
        int panelHeight = bodyPanel.getHeight();

        int imageX = (panelWidth - imageWidth) / 2;
        int imageY = (panelHeight - imageHeight - labelHeight) / 2;
        int labelX = (panelWidth - noDataLabel.getPreferredSize().width) / 2;
        int labelY = imageY + imageHeight + 10;

        noDataImage.setBounds(imageX, imageY, imageWidth, imageHeight);
        noDataLabel.setBounds(labelX, labelY, noDataLabel.getPreferredSize().width, labelHeight);

        bodyPanel.add(noDataImage);
        bodyPanel.add(noDataLabel);

        bodyPanel.revalidate();
        bodyPanel.repaint();
    }

    private void displayDokter(List<DokterModel> doctors) {
        bodyPanel.removeAll();
        bodyPanel.repaint();
        bodyPanel.revalidate();

        if (doctors == null || doctors.isEmpty()) {
            emptyDataDisplay();
        } else {
            bodyPanel.setLayout(null);

            int x = 20, y = 20;
            int cardWidth = 420, cardHeight = 420;
            int padding = 20;
            int cardsPerRow = 2;

            for (int i = 0; i < doctors.size(); i++) {
                DokterModel dokter = doctors.get(i);
                ShadowPanel cardDokter = new ShadowPanel(8, Color.decode("#DFDFDF"));
                cardDokter.setBackground(Color.WHITE);
                cardDokter.setBounds(x, y, cardWidth, cardHeight);

                JLabel labelId = new JLabel("ID: " + dokter.getId());
                JLabel titleNama = new JLabel("Nama Dokter");
                JLabel labelNama = new JLabel(dokter.getNama());
                JLabel titleSpesialis = new JLabel("Spesialis");
                JLabel labelSpesialis = new JLabel(dokter.getSpesialis());
                JLabel titleTelpon = new JLabel("No Telpon");
                JLabel labelTelpon = new JLabel(dokter.getNoTelpon());
                JLabel titleAlamat = new JLabel("Alamat");

                // Menggunakan JTextArea untuk labelAlamat
                JTextArea labelAlamat = new JTextArea(dokter.getAlamat());
                labelAlamat.setLineWrap(true);
                labelAlamat.setWrapStyleWord(true);
                labelAlamat.setEditable(false);
                labelAlamat.setOpaque(false); // Mengatur agar JTextArea transparan seperti JLabel
                labelAlamat.setBorder(null);  // Menghapus border default
                labelAlamat.setFocusable(false); // Non-fokus agar terlihat seperti JLabel

                RoundedPanel buttonEdit = new RoundedPanel(12, Color.white);
                JLabel editLabel = new JLabel("Edit Dokter");
                editLabel.setForeground(Color.WHITE);
                buttonEdit.add(editLabel);
                buttonEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

                RoundedPanel buttonHapus = new RoundedPanel(12, Color.white);
                JLabel hapusLabel = new JLabel("Hapus Dokter");
                hapusLabel.setForeground(Color.RED); // Set text color
                buttonHapus.add(hapusLabel);
                buttonHapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

                setupHoverEffect(buttonEdit, Color.decode("#508D4E"), Color.BLACK);
                setupHoverEffect(buttonHapus, Color.WHITE, Color.RED);

                buttonEdit.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        editDokterView = new EditDokterView(dokter);
                        editDokterView.setVisible(true);
                    }
                });

                buttonHapus.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        hapusLabel.setForeground(Color.WHITE);
                    }

                    @Override
                    public void mouseExited(java.awt.event.MouseEvent evt) {
                        hapusLabel.setForeground(Color.RED);
                    }

                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        int response = JOptionPane.showConfirmDialog(null, "Anda yakin ingin menghapus " + dokter.getNama(), "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (response == JOptionPane.YES_OPTION) {
                            // Implementasi aksi untuk menghapus dokter
                            dokterController.hapusDokter(dokter.getId());
                            loadDataDokter();
                            displayDokter(dokterList);
                        }
                    }
                });

                try {
                    File poppinsSemiBold = new File("src/resources/assets/fonts/Poppins-SemiBold.ttf");
                    File poppinsBold = new File("src/resources/assets/fonts/Poppins-Bold.ttf");

                    Font cardTxtStyle = Font.createFont(Font.TRUETYPE_FONT, poppinsSemiBold).deriveFont(14f);
                    Font titleTxtStyle = Font.createFont(Font.TRUETYPE_FONT, poppinsBold).deriveFont(12f);

                    titleNama.setFont(titleTxtStyle);
                    titleNama.setForeground(Color.decode("#508D4E"));
                    titleSpesialis.setFont(titleTxtStyle);
                    titleSpesialis.setForeground(Color.decode("#508D4E"));
                    titleTelpon.setFont(titleTxtStyle);
                    titleTelpon.setForeground(Color.decode("#508D4E"));
                    titleAlamat.setFont(titleTxtStyle);
                    titleAlamat.setForeground(Color.decode("#508D4E"));

                    labelId.setForeground(Color.decode("#508D4E"));
                    labelId.setFont(titleTxtStyle);
                    labelNama.setFont(cardTxtStyle);
                    labelSpesialis.setFont(cardTxtStyle);
                    labelTelpon.setFont(cardTxtStyle);
                    labelAlamat.setFont(cardTxtStyle); // Set font untuk JTextArea
                    hapusLabel.setFont(cardTxtStyle);
                    editLabel.setFont(cardTxtStyle);

                } catch (Exception e) {
                    e.printStackTrace();
                }

                buttonHapus.setPreferredSize(new java.awt.Dimension(360, 36));
                buttonEdit.setPreferredSize(new java.awt.Dimension(360, 36));

                cardDokter.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
                cardDokter.add(labelId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));
                cardDokter.add(titleNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));
                cardDokter.add(labelNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
                cardDokter.add(titleSpesialis, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));
                cardDokter.add(labelSpesialis, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));
                cardDokter.add(titleTelpon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));
                cardDokter.add(labelTelpon, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));
                cardDokter.add(titleAlamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));
                cardDokter.add(labelAlamat, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, cardWidth - 40, 60)); // Mengatur ukuran dan posisi JTextArea
                cardDokter.add(buttonEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));
                cardDokter.add(buttonHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, -1, -1));

                bodyPanel.add(cardDokter);

                if ((i + 1) % cardsPerRow == 0) {
                    x = 20;
                    y += cardHeight + padding;
                } else {
                    x += cardWidth + padding;
                }
            }

            bodyPanel.setPreferredSize(new Dimension(bodyPanel.getWidth(), y + cardHeight + padding));
            bodyPanel.revalidate();
            bodyPanel.repaint();
        }
    }

    private void setupHoverEffect(JPanel button, Color defaultColor, Color hoverColor) {
        button.setBackground(defaultColor);

        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setBackground(hoverColor);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                button.setBackground(defaultColor);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel refreshButton;
    private javax.swing.JPanel searchButton;
    private javax.swing.JTextField searchTxtField;
    private javax.swing.JPanel tambahButton;
    private javax.swing.JLabel titleDataObat;
    // End of variables declaration//GEN-END:variables
}
