/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.java.com.careHubApps.view;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.stream.Collectors;
import javax.imageio.ImageIO;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import main.java.com.careHubApps.controller.AntrianController;
import main.java.com.careHubApps.model.AntrianModel;
import resources.components.CustomTextField;
import resources.components.RoundedPanel;
import resources.components.ScrollBarCustom;
import resources.components.ShadowPanel;

/**
 *
 * @author ASUS
 */
public final class AntrianView extends javax.swing.JFrame {
    
    List <AntrianModel> antrianList;
    AntrianController antrianController;
    AntrianModel antrianModel;
    HomePanel homePanel;
    JScrollPane scrollPane;


    /**
     * Creates new form AntrianView
     */
    public AntrianView() {
        
        homePanel = new HomePanel();
        
        this.antrianController = new AntrianController();
        initComponents();
        loadDataAntrian();
        
        ScrollBarCustom sb = new ScrollBarCustom();
        jScrollPane2.setVerticalScrollBar(sb);
        
        setupHoverEffect(searchButton, Color.decode("#508D4E"), Color.BLACK);
        setupHoverEffect(refreshButton, Color.decode("#D9D9D9"), Color.BLACK);
        setIconImage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        headerPanel = new ShadowPanel(8, Color.decode("#DFDFDF"));
        titleDatPasien = new javax.swing.JLabel();
        searchTxtField = new CustomTextField(15, 15, 15, Color.decode("#80AF81"), "Search here", 8);
        searchButton = new RoundedPanel(12, Color.decode("#1A5319"));
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        refreshButton = new RoundedPanel(12, Color.decode("#1A5319"));
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bodyPanel = new RoundedPanel(12, Color.white);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Antrian Pasien");
        setPreferredSize(new java.awt.Dimension(1280, 680));
        getContentPane().setLayout(new java.awt.CardLayout());

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        headerPanel.setBackground(new java.awt.Color(255, 255, 255));

        titleDatPasien.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        titleDatPasien.setText("Antrian Pasien");

        searchTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTxtFieldKeyTyped(evt);
            }
        });

        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });
        searchButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/search_icon.png"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setPreferredSize(new java.awt.Dimension(30, 30));
        searchButton.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/queue_icon.png"))); // NOI18N

        refreshButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refreshButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshButtonMouseClicked(evt);
            }
        });
        refreshButton.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/refresh_icon.png"))); // NOI18N
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel4.setPreferredSize(new java.awt.Dimension(30, 30));
        refreshButton.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(titleDatPasien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 529, Short.MAX_VALUE)
                .addComponent(searchTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                        .addComponent(titleDatPasien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 1030, 70));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 240, 1));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        bodyPanel.setBackground(new java.awt.Color(255, 255, 255));
        bodyPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jScrollPane2.setViewportView(bodyPanel);

        mainPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 1130, 750));

        getContentPane().add(mainPanel, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTxtFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtFieldKeyTyped
        // TODO add your handling code here:
        performSearch();
    }//GEN-LAST:event_searchTxtFieldKeyTyped

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        // TODO add your handling code here:
        performSearch();
    }//GEN-LAST:event_searchButtonMouseClicked

    private void refreshButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshButtonMouseClicked
        // TODO add your handling code here:
        loadDataAntrian();
    }//GEN-LAST:event_refreshButtonMouseClicked

    private void performSearch() {
        String searchText = searchTxtField.getText().trim().toLowerCase();
        
        if (searchText.isEmpty()) {
            loadDataAntrian();
            displayQueues(antrianList);
        } else {
            List<AntrianModel> filteredQueues = antrianList.stream()
                .filter(q -> q.getNama().toLowerCase().contains(searchText) ||
                        q.getId().toLowerCase().contains(searchText) ||
                        q.getRuang().toLowerCase().contains(searchText) ||
                        q.getDokter().toLowerCase().contains(searchText))
                .collect(Collectors.toList());
    
            System.out.println("Search performed, number of filtered items: " + filteredQueues.size());

            
            if (filteredQueues.isEmpty()) {
                displayNoDataFound();
            } else {
                displayQueues(filteredQueues);
            }
        }
        
    }
    
    private void displayNoDataFound() {
        bodyPanel.removeAll();

        JLabel noDataLabel = new JLabel("Maaf, " + "`" + searchTxtField.getText().trim() + "`" + " tidak ditemukan.");
        JLabel noDataImage = new JLabel();

        noDataImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/not_found.png")));

        try {
            File poppinsSemiBold = new File("src/resources/assets/fonts/Poppins-SemiBold.ttf");
            Font labelTxtStyle = Font.createFont(Font.TRUETYPE_FONT, poppinsSemiBold).deriveFont(16f);
            noDataLabel.setFont(labelTxtStyle);
            noDataLabel.setForeground(Color.decode("#508D4E"));
        } catch (Exception e){
            e.printStackTrace();
        }

        noDataLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noDataImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        bodyPanel.setLayout(null);  // Set layout to null for AbsoluteLayout

        int imageWidth = 128;  // Adjust this to the actual width of your image
        int imageHeight = 128; // Adjust this to the actual height of your image
        int labelHeight = 30;  // Height of the label
        int panelWidth = bodyPanel.getWidth();
        int panelHeight = bodyPanel.getHeight();

        int imageX = (panelWidth - imageWidth) / 2;
        int imageY = (panelHeight - imageHeight - labelHeight) / 2;
        int labelX = (panelWidth - noDataLabel.getPreferredSize().width) / 2;
        int labelY = imageY + imageHeight + 10;

        noDataImage.setBounds(imageX, imageY, imageWidth, imageHeight);
        noDataLabel.setBounds(labelX, labelY, noDataLabel.getPreferredSize().width, labelHeight);

        bodyPanel.add(noDataImage);
        bodyPanel.add(noDataLabel);

        bodyPanel.revalidate();
        bodyPanel.repaint();
    }
    
    private void emptyDataDisplay(){
        bodyPanel.removeAll();
        
        JLabel noDataLabel = new JLabel("Tidak Ada Antrian");
        JLabel noDataImage = new JLabel();

        noDataImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/assets/images/thinking.png")));

        try {
            File poppinsSemiBold = new File("src/resources/assets/fonts/Poppins-SemiBold.ttf");
            Font labelTxtStyle = Font.createFont(Font.TRUETYPE_FONT, poppinsSemiBold).deriveFont(16f);
            noDataLabel.setFont(labelTxtStyle);
            noDataLabel.setForeground(Color.decode("#508D4E"));
        } catch (Exception e){
            e.printStackTrace();
        }

        noDataLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        noDataImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        bodyPanel.setLayout(null);  // Set layout to null for AbsoluteLayout

        int imageWidth = 128;  // Adjust this to the actual width of your image
        int imageHeight = 128; // Adjust this to the actual height of your image
        int labelHeight = 30;  // Height of the label
        int panelWidth = bodyPanel.getWidth();
        int panelHeight = bodyPanel.getHeight();

        int imageX = (panelWidth - imageWidth) / 2;
        int imageY = (panelHeight - imageHeight - labelHeight) / 2;
        int labelX = (panelWidth - noDataLabel.getPreferredSize().width) / 2;
        int labelY = imageY + imageHeight + 10;

        noDataImage.setBounds(imageX, imageY, imageWidth, imageHeight);
        noDataLabel.setBounds(labelX, labelY, noDataLabel.getPreferredSize().width, labelHeight);

        bodyPanel.add(noDataImage);
        bodyPanel.add(noDataLabel);

        bodyPanel.revalidate();
        bodyPanel.repaint();
    }
    
    public void loadDataAntrian() {
        this.antrianList = antrianController.getAllAntrian();        
        if (antrianList == null || antrianList.isEmpty()) {
            emptyDataDisplay();
        } else {
            displayQueues(antrianList);
        }
        
    }

    private void displayQueues(List<AntrianModel> queues) {
        bodyPanel.removeAll(); // Clear existing components
        bodyPanel.repaint();
        bodyPanel.revalidate();

        if (queues == null || queues.isEmpty()) { 
            emptyDataDisplay();
        } else {
            bodyPanel.setLayout(null); // Use absolute layout

            int x = 20, y = 20; // Starting position for the first card
            int cardWidth = 320, cardHeight = 360;
            int padding = 20;

            for (AntrianModel antrian : queues) {
                ShadowPanel cardAntrian = new ShadowPanel(8, Color.decode("#DFDFDF"));
                cardAntrian.setBackground(Color.WHITE);
                cardAntrian.setBounds(x, y, cardWidth, cardHeight); // Set position and size

                JLabel labelId = new JLabel("ID: " + antrian.getId());
                JLabel titleNama = new JLabel("Nama Pasien");
                JLabel labelNama = new JLabel(antrian.getNama());
                JLabel titleWaktu = new JLabel("Waktu");
                JLabel labelWaktu = new JLabel(antrian.getWaktu());
                JLabel titleLayanan = new JLabel("Layanan");
                JLabel labelLayanan = new JLabel(antrian.getDokter());
                JLabel titleRuang = new JLabel("Ruang");
                JLabel labelRuang = new JLabel(antrian.getRuang());
                

                RoundedPanel buttonAntrian = new RoundedPanel(12, Color.decode("#508D4E"));
                JLabel buttonLabel = new JLabel("Panggil Antrian");
                buttonLabel.setForeground(Color.WHITE); // Set text color
                buttonAntrian.add(buttonLabel);
                buttonAntrian.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

                setupHoverEffect(buttonAntrian, Color.decode("#508D4E"), Color.BLACK);

                buttonAntrian.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        int response = JOptionPane.showConfirmDialog(null, "Apakah Anda akan memanggil " + antrian.getNama(), "Konfirmasi", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (response == JOptionPane.YES_OPTION) {
                            antrianController.panggilAntrian(antrian.getId());
                            loadDataAntrian();
                        }
                    }
                });

                try {
                    File poppinsSemiBold = new File("src/resources/assets/fonts/Poppins-SemiBold.ttf");
                    File poppinsBold = new File("src/resources/assets/fonts/Poppins-Bold.ttf");

                    Font cardTxtStyle = Font.createFont(Font.TRUETYPE_FONT, poppinsSemiBold).deriveFont(14f);
                    Font titleTxtStyle = Font.createFont(Font.TRUETYPE_FONT, poppinsBold).deriveFont(12f);

                    titleNama.setFont(titleTxtStyle);
                    titleNama.setForeground(Color.decode("#508D4E"));
                    titleWaktu.setFont(titleTxtStyle);
                    titleWaktu.setForeground(Color.decode("#508D4E"));
                    titleLayanan.setFont(titleTxtStyle);
                    titleLayanan.setForeground(Color.decode("#508D4E"));
                    titleRuang.setFont(titleTxtStyle);
                    titleRuang.setForeground(Color.decode("#508D4E"));

                    labelId.setForeground(Color.decode("#508D4E"));
                    labelId.setFont(titleTxtStyle);
                    labelNama.setFont(cardTxtStyle);
                    labelWaktu.setFont(cardTxtStyle);
                    labelLayanan.setFont(cardTxtStyle);
                    labelRuang.setFont(cardTxtStyle);
                    buttonLabel.setFont(cardTxtStyle);

                } catch(Exception e){
                    e.printStackTrace();
                }

                buttonAntrian.setPreferredSize(new java.awt.Dimension(280, 36));

                cardAntrian.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
                cardAntrian.add(labelId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));
                cardAntrian.add(titleNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));
                cardAntrian.add(labelNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
                cardAntrian.add(titleWaktu, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));
                cardAntrian.add(labelWaktu, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));
                cardAntrian.add(titleLayanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));
                cardAntrian.add(labelLayanan, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));
                cardAntrian.add(titleRuang, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));
                cardAntrian.add(labelRuang, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));
                cardAntrian.add(buttonAntrian, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));

                bodyPanel.add(cardAntrian);

                x += cardWidth + padding;
                if (x + cardWidth + padding > bodyPanel.getWidth()) {
                    x = 20;
                    y += cardHeight + padding;
                }
            }

            // Adjust the size of bodyPanel to fit all cards
            bodyPanel.setPreferredSize(new Dimension(bodyPanel.getWidth(), y + cardHeight + padding));
            bodyPanel.revalidate();
            bodyPanel.repaint();
        }
    }
    
    private void setIconImage() {
        try {
            Image icon = ImageIO.read(new File("src/resources/assets/images/logo_main.png"));
            setIconImage(icon);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private void setupHoverEffect(JPanel button, Color defaultColor, Color hoverColor) {
        button.setBackground(defaultColor);

        button.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseEntered(MouseEvent e) {
                button.setBackground(hoverColor);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                button.setBackground(defaultColor);
            }
        });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AntrianView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AntrianView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AntrianView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AntrianView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AntrianView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel refreshButton;
    private javax.swing.JPanel searchButton;
    private javax.swing.JTextField searchTxtField;
    private javax.swing.JLabel titleDatPasien;
    // End of variables declaration//GEN-END:variables
}
